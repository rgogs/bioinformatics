# Install the package ggplot2
install.packages("ggplot2")
# Any time I want to use this
# package I need to load it
library(ggplot2)
View(cars)
plot(cars)
# Our first ggplot
# we need data + aes + geoms
ggplot(data=cars)
# Our first ggplot
# we need data + aes + geoms
ggplot(data=cars) +
aes(x=speed)
# Our first ggplot
# we need data + aes + geoms
ggplot(data=cars) +
aes(x=speed, y=dist)
# Our first ggplot
# we need data + aes + geoms
ggplot(data=cars) +
aes(x=speed, y=dist) +
geom_point()
p
p <- ggplot(data=cars) +
aes(x=speed, y=dist) +
geom_point()
p
p + geom_line()
p + geom_smooth()
p + geom_smooth(method="lm")
head(genes)
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
View(genes)
# Let's make a first plot attempt
ggplot(data=genes) +
aes(x=Condition1, y=Condition2)
# Let's make a first plot attempt
ggplot(data=genes) +
aes(x=Condition1, y=Condition2) +
geom_point()
g <- ggplot(data=genes) +
aes(x=Condition1, y=Condition2) +
geom_point()
g
g <- ggplot(data=genes) +
aes(x=Condition1, y=Condition2,
col=State) +
geom_point()
g
# Q. how many genes are in this dataset?
nrow(genes)
# Q. how many "up" regulated genes
table(genes$State)
# Q. What fraction of total genes is up-regulated
table(genes$State) / nrow(genes)
# Q. What fraction of total genes is up-regulated
(table(genes$State) / nrow(genes)) * 100
# Q. What fraction of total genes is up-regulated
round( (table(genes$State) / nrow(genes)) * 100, 2)
# Add some color
g
# Add some color
g + scale_color_manual( values=c("blue", "gray", "red"))
# Add some color
g + scale_color_manual( values=c("blue", "gray", "red")) +
labs(x="Control (no drug)")
# Add some color
g + scale_color_manual( values=c("blue", "gray", "red")) +
labs(title="Gene expression changes",x="Control (no drug)")
theme_bw()
source("C:/Users/RALPH/Desktop/Winter 2022/bimm143/week05/week05.R")
source("C:/Users/RALPH/Desktop/Winter 2022/bimm143/week05/week05.R")
ggplot(data=genes) +
aes(x=Condition1, y=Condition2, col=State) +
geom_point()
g
# Let's make a first plot attempt
ggplot(genes) +
aes(Condition1, Condition2, col=State) +
geom_point()
ggplot(genes) +
aes(Condition1, Condition2, col=State) +
geom_point()
# Let's make a first plot attempt
ggplot(data=genes) +
View(genes)
g
ggplot(data=genes) +
aes(x=Condition1, y=Condition2, col=State) +
geom_point()
