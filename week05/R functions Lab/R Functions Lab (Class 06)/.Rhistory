knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
plot(pressure)
> Q1. Write a function grade() to determine an overall grade from a vector of student homework
assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an
NA value) this can be used as a score to be potentially dropped. Your final function should be
adquately explained with code comments and be able to work on an example class gradebook
such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts]
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
# Straight forward mean()
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
mean(student1)
```{r}
min(student1)
which.min(student1)
student1[8]
student1[-8]
student1[-min(student1)]
student1[-which.min(student1)]
student1[-2:8]
student1[-8]
mean( student1[-which.min(student1)])
mean(student2)
mean(student2, na.rm=TRUE)
mean(student3, na.rm=TRUE)
mean(student3, na.rm=TRUE)
mean(student2, na.rm=TRUE)
is.na(x)
x <- student2
is.na(x)
which( is.na(x))
x[which(is.na(x)]
x[-which(is.na(x)]
x[-which(is.na(x))]
mean(x[-which(is.na(x))])
x[is.na(x)] <- 0
x
mean(x)
x[is.na(x)] <- 0
x[is.na(x)] <- 0
mean( x[-which.min(x)])
x <- student3
x[is.na(x)] <- 0
mean( x[-which.min(x)])
grade <- function(x) {
x[is.na(x)] <- 0
mean( x[-which.min(x)])
}
grade(student1)
grade(student3)
grade(student1)
grade(student2)
grade(student3)
#' Calculate the average score for a vector of
#' student scores dropping the lowest score.
#' Missing values will be treated as zero.
#'
#' @param x A numeric vector of homework scores
#'
#' @return Average score
#' @export
#'
#' @examples
#'  student <- c(100, NA, 90, 97)
#'  grade(student)
#'
grade <- function(x) {
#mask NA with zero
#Treat missing values as zero
x[is.na(x)] <- 0
#Exclude lowest score from mean
mean( x[-which.min(x)])
}
```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url)
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url)
View(gradebook)
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)
apply(gradebook, 1, grade)
which.max(apply(gradebook, 1, grade))
results <- apply(gradebook, 1, grade)
results
results <- apply(gradebook, 1, grade)
sort(results)
results <- apply(gradebook, 1, grade)
sort(results, decreasing = TRUE)
```{r}
which.max(results)
apply(gradebook, 2, mean)
apply(gradebook, 2, mean, na.rm=TRUE)
which.min(ave.scores)
ave.scores
ave.scores <- apply(gradebook, 2, mean, na.rm=TRUE)
ave.scores
which.min(ave.scores)
med.scores <- apply(gradebook, 2, median, na.rm=TRUE)
median.scores
med.scores <- apply(gradebook, 2, median, na.rm=TRUE)
med.scores
which.min(med.scores)
boxplot(gradebook)
cor(results, gradebook$hw1)
masked.gradebook <- gradebook
masked.gradebook[ is.na(masked.gradebook) ] <- 0
masked gradebook
masked.gradebook <- gradebook
masked.gradebook[ is.na(masked.gradebook) ] <- 0
masked.gradebook
cor(results, gradebook$hw1)
cor(results, masked.gradebook$hw5)
apply(masked.gradebook, 2, cor, x=results)
