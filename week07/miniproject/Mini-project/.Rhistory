fna.data <- "WisconsinCancer.csv"
fna.data <- "WisconsinCancer.csv"
wisc.df <- view(fna.data, row.names=1)
fna.data <- "WisconsinCancer.csv"
wisc.df <- head(fna.data, row.names=1)
fna.data <- "WisconsinCancer.csv"
wisc.df <- head(fna.data, row.names=1)
wisc.df
fna.data <- "WisconsinCancer.csv"
wisc.df <- View(fna.data, row.names=1)
wisc.df
fna.data <- "WisconsinCancer.csv"
wisc.df <- (fna.data, row.names=1)
fna.data <- "WisconsinCancer.csv"
wisc.df <- print(fna.data, row.names=1)
wisc.df
fna.data <- "WisconsinCancer.csv"
wisc.df <- read.csv(fna.data, row.names=1)
read.csv("E:\\Downloads\\WisconsinCancer.csv")
wisc.df <- read.csv("E:\\Downloads\\WisconsinCancer.csv")
wisc.df <- read.csv("E:\\Downloads\\WisconsinCancer.csv")
wisc.df
wisc.data <- wisc.df[,-1]
nrow(wisc.df)
nrow(wisc.df)
dim(wisc.df)
nrow(wisc.data)
nrow(wisc.data)
table(wisc.data)
grep(wisc.data)
grep(pattern, wisc.data)
grep(pattern, wisc.data, ignore.case = FALSE, per1 = FALSE, fixed = FALSE, useBytes = FALSE)
nrow(wisc.data)
sum(diagnosis)
length(wisc.data)
is.M(x) <- 0
is.M(wisc.data[2,]) <- 0
dim(wisc.data[,2])
dim(wisc.data[2])
table(wisc.data[,2])
length(wisc.data[,2])
length(wisc.data[2,)
grep(wisc.data[2,])
grep(pattern, wisc.data[2,])
x <- wisc.df[,1]
x <- wisc.df[,1]
x
x <- wisc.df[1,]
x
x <- wisc.df[,2]
x
x <- wisc.df[,2]
grep("M", x)
x <- wisc.df[,2]
grep("M", x)
x <- wisc.df[,2]
g <- grep("M", x)
length(g)
table(wisc.df[1])
table(wisc.df[,1])
table(wisc.df[,2])
table(wisc.df[,2])
table(wisc.df[,3])
table(wisc.df)
table(wisc.df[3,1])
table(wisc.df[1,])
colMeans(wisc.data)
colMeans(wisc.data[2:32])
colMeans(wisc.data[3:32])
colMeans(wisc.data[2:32])
colMeans(wisc.data(2:32)
colMeans(wisc.data)
# Check column means and standard deviations
colMeans(wisc.data)
# Check column means and standard deviations
colMeans(wisc.data)
# Check column means and standard deviations
colMeans(wisc.data[3:5])
apply(wisc.data, 2, sd)
# Check column means and standard deviations
colMeans(wisc.data[2:5])
apply(wisc.data, 2, sd)
# Check column means and standard deviations
colMeans(wisc.data[1:5])
# Check column means and standard deviations
colMeans(wisc.data[125])
# Check column means and standard deviations
colMeans(wisc.data[2:5])
apply(wisc.data, 2, sd)
# Check column means and standard deviations
colMeans(wisc.data[2:36])
# Check column means and standard deviations
colMeans(wisc.data[2:35])
# Check column means and standard deviations
colMeans(wisc.data[2:34])
# Check column means and standard deviations
colMeans(wisc.data[2:33])
# Check column means and standard deviations
colMeans(wisc.data[2:32])
# Check column means and standard deviations
colMeans(wisc.data[2:31])
apply(wisc.data, 2, sd)
# Check column means and standard deviations
colMeans(wisc.data[2:31])
apply(wisc.data, 2, sd)
# Check column means and standard deviations
colMeans(wisc.data[2:31])
apply(wisc.data[2:31], 2, sd)
# Check column means and standard deviations
colMeans(wisc.data[2:31])
apply(wisc.data[2:31], 2, sd)
# Check column means and standard deviations
colMeans(wisc.data[2:31])
apply(wisc.data[2:31], 2, sd)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31])
#Look at summary of results
summary(wisc.pr)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,1:3])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:3])
#Look at summary of results
summary(wisc.pr)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:570])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:569])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:550])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:530])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:400])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:20])
#Look at summary of results
summary(wisc.pr)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:569])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,2:565])
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31,)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(x = wisc.data[2:31])
#Look at summary of results
summary(wisc.pr)
biplot(wisc.pr)
biplot(wisc.pr)
# Scatter plot observations by components 1 and 2
plot( wisc.pr , col = diagnosis ,
xlab = "PC1", ylab = "PC2")
diagnosis <- as.numeric(wisc.df$diagnosis = "M")
diagnosis <- as.numeric(wisc.df$diagnosis == "M")
diagnosis <- as.numeric(wisc.df$diagnosis == "M")
diagnosis <- as.numeric(wisc.df$diagnosis == "M")
# Scatter plot observations by components 1 and 2
plot( wisc.pr , col = diagnosis ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr , col = diagnosis ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis+1 ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis+2 ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis+3 ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis+4 ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis+5 ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis+6 ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis+2 ,
xlab = "PC1", ylab = "PC2")
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis
# Load the ggplot2 package
library(ggplot2)
# Make a scatter plot colored by diagnosis
ggplot(df) +
aes(PC1, PC2, col=___) +
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis
# Load the ggplot2 package
library(ggplot2)
# Make a scatter plot colored by diagnosis
ggplot(df) +
aes(PC1, PC2, col=diagnosis) +
___()
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis
# Load the ggplot2 package
library(ggplot2)
# Make a scatter plot colored by diagnosis
ggplot(df) +
aes(PC1, PC2, col=diagnosis) +
geom_point()
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
# Variance explained by each principal component: pve
pve <- wisc.pr$sdev / pr.var
# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component",
ylab = "Proportion of Variance Explained",
ylim = c(0, 1), type = "o")
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
# Variance explained by each principal component: pve
pve <- pr.var / wisc.pr$sdev
# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component",
ylab = "Proportion of Variance Explained",
ylim = c(0, 1), type = "o")
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data[2:31])
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data[2:31])
data.dist <- euclidean(data.scaled)
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data[2:31])
euclidean <- function(a, b) sqrt(sum((a - b)^2))
data.dist <- euclidean(data.scaled)
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data[2:31])
data.dist <- sqrt(sum(data.scaled)^2)
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data[2:31])
data.dist <- sqrt(sum(data.scaled)^2)
wisc.hclust <- hclust(data.dist, method = "complete")
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data[2:31])
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method = "complete")
plot(wisc.hclust)
plot(wisc.hclust)
abline(hclust, col="red", lty=2)
plot(wisc.hclust)
abline(hclust, col="red", lty=2)
plot(wisc.hclust)
abline(hclust, col="red")
plot(wisc.hclust)
abline(v=4, col="red", lty=2)
plot(wisc.hclust)
abline(y=4, col="red", lty=2)
plot(wisc.hclust)
abline(v=4, col="red", lty=2)
plot(wisc.hclust)
abline(v=20, col="red", lty=2)
plot(wisc.hclust)
abline(x=4, col="red", lty=2)
plot(wisc.hclust)
abline(z=4, col="red", lty=2)
plot(wisc.hclust)
abline(v=4, col="red", lty=2)
plot(wisc.hclust)
abline(h=4, col="red", lty=2)
plot(wisc.hclust)
abline(h=20, col="red", lty=2)
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
cutree(wisc.hclust, k= 6)
table(cutree(wisc.hclust, k= 6), diagnosis)
table(cutree(wisc.hclust, k= 6), diagnosis)
table(cutree(wisc.hclust, k= 7), diagnosis)
table(cutree(wisc.hclust, k= 8), diagnosis)
table(cutree(wisc.hclust, k= 2), diagnosis)
table(cutree(wisc.hclust, k= 6), diagnosis)
table(cutree(wisc.hclust, k= 7), diagnosis)
table(cutree(wisc.hclust, k= 8), diagnosis)
table(cutree(wisc.hclust, k= 2), diagnosis)
table(cutree(wisc.hclust, k= 3), diagnosis)
table(cutree(wisc.hclust, k= 6), diagnosis)
table(cutree(wisc.hclust, k= 7), diagnosis)
table(cutree(wisc.hclust, k= 8), diagnosis)
grps <- cutree(wisc.pr.hclust, k=2)
grps <- cutree(wisc.hclust, k=2)
table(grps)
grps <- cutree(wisc.hclust, k=2)
table(grps)
table(grps, diagnosis)
plot(wisc.pr$x[,1:2], col=grps)
table(wisc.pr, diagnosis)
table(wisc.hclust, diagnosis)
table(grps, diagnosis)
table(wisc.km$cluster, wisc.hclust.clusters)
table(wisc$cluster, wisc.hclust.clusters)
table(wisc.km$cluster, wisc.hclust.clusters)
table(wisc.km$cluster, wisc.hclust.clusters)
table(wisc.km$cluster, wisc.hclust.clusters)
table(wisc.km$cluster, wisc.hclust.clusters)
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
